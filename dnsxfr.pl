#!/usr/bin/perl
#
# Mario Arturo Perez Rangel
#
# Algunos servidores DNS tienen mal configurada la opcion de transferencia
# de zona y permiten ese tipo de consulta a todo el mundo. El programa
# intenta hacer una transferencia de zona del dominio o los dominios
# especificados en la linea de comandos o mediante un archivo.
#
use warnings;
use strict;

use Getopt::Long;
use Net::DNS;

my $file='';
my @domains;
my ($dfile, $ind) = ('', 0);
my (@nss, @zone, $nsq, $resolver, $rxfr);

#################################
# Manejo de las opciones
#################################
GetOptions ('dfile=s' => \$dfile);

# Se paso el nombre del archivo en linea de comandos
if ($dfile) { 
    if ((stat($dfile))[3] <= 0 ) {# Ver si existe el archivo
	print "El archivo $dfile no existe, terminando.\n";
	exit (-2);
    }

    open (DOMAINS, $dfile) or
	die "No fue posible abrir el archivo.\n";


    # Guardamos los dominios a consultar
    while (<DOMAINS>) {
	chomp $_;
	push @domains, $_ if (isDomain($_));
    }
    close (DOMAINS);

    # Los dominios vienen en la linea de comandos uno por uno
} else {
    if ($#ARGV < 0) {
	print "Necesita especificar al menos un nombre de dominio.\n\n";
	print "Uso: ", $0, "[-dfile <archivo de dominios>] <dominio> [dominio(s)]\n\n";
	exit (-1);
    } else { # Procesamos la linea de comandos

	# Guardamos los dominios a consultar
	while ($ind <= $#ARGV ) {
	    push @domains, $ARGV[$ind] if (isDomain($ARGV[$ind]));
	    $ind++;
	}
    }
}

######################################
## Solicitud de transferencia de zona
######################################
$resolver = Net::DNS::Resolver->new();
for my $d (@domains) {

    # Obtenemos la lista de servidores DNS para este dominio
    $nsq = $resolver->query($d, "NS");
    for my $nsrv (grep {$_->type eq "NS"} $nsq->answer) {
	push @nss, $nsrv->nsdname;
    }
    
    $#zone = -1; # Vaciamos la lista de registros obtenidos
    $ind = 0;
    $rxfr = Net::DNS::Resolver->new();

    # Consulta cada servidor dns de la lista, se detiene
    # en el primero que entregue toda la zona.
    while (!@zone and $ind <= $#nss) {
	$rxfr->nameservers($nss[$ind++]);
	@zone = $rxfr->axfr($d);
    }

    print '+++++++++++++++++++++++++++++++++++++++++++++++++++++',"\n";
    print '++++ Registros DNS del dominio: ', $d, ' +++++++', "\n";
    print '+++++++++++++++++++++++++++++++++++++++++++++++++++++',"\n";
    if (@zone) {
	for my $rr (@zone) {
	    $rr->print;
	}
    } else { # No se consiguio ningun registro
	print "\n";
	print "No se pudo conseguir ningun registro de la zona.\n\n";
    }
}

#
# isDomain hace una verificacion del nombre de dominio.
#
# Recibe: una cadena de caracteres.
# Regresa: 1 la cadena tiene "forma" de un nombre de dominio.
#          0 en caso contrario.
sub isDomain {
    my $domain = shift @_;

    if ($domain =~ /^[\w\d\._-]+$/) {
	return 1;
    }
    return 0;
}

=head1
Transferencia de zona DNS

El programa intenta hacer la transferencia de zona de un dominio DNS.

Si los servidores DNS del dominio buscado tienen habilitado la transferencia de zona sin restricciones alguna, el programa hara la consulta pertinente para obtener todos los registros de la zona.
=cut

=head2
Uso

 En la linea de comandos se espcifica el nombre del dominio o
 los nombres de dominio. Al menos un nombre de dominio debe ser
 proporcionado:

  perl dnsxfr.pl dominio [dominio(s)]

 El programa es capaza de leer de un archivo los nombres de dominio, uno por
 linea, con la opcion --dfile. Ejemplo:

   perl dnsxfr.pl --dfile lista_de_dominios.txt

  la opcion --difle es excluyente, ignora el resto de la linea.
=cut
