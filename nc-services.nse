local http = require "http"
local vulns = require "vulns"
local stdnse = require "stdnse"
local string = require "string"
local services_nc = require "table"

description = [[
Verifica que el target sea un servidor web. Para tal efecto se observa que
el puerto 80 este abierto. Determinado lo anterior se buscan puertos arriba
del puerto 1024 que se encuentren abiertos, y de una manera simple ver
que servicio esta atendiendo el puerto.
]]

---
-- @usage
-- nmap --script ./nc-services.nse <host>
--
-- @output
-- Host script results:
-- | nc-services: 
-- |   3306/tcp: open	
-- |   8009/tcp: open
-- |   1524/tcp: open	
-- |   8787/tcp: open
-- |   39152/tcp: open
-- |   1099/tcp: open
-- |   2049/tcp: open
-- |   8180/tcp: open
-- |   description: Open ports
-- |   43322/tcp: open
-- |   36268/tcp: open
-- |   40073/tcp: open
-- |   3632/tcp: open
-- |   5900/tcp: open	
-- |   6000/tcp: open
-- |   6697/tcp: open	
-- |   5432/tcp: open
-- |   title: Open ports
-- |   6667/tcp: open	
-- |_  2121/tcp: open	

author = "Mario Arturo Perez Rangel"
license = "Same as Nmap--See https://nmap.org/book/man-legal.html"

categories = {"default", "discovery", "safe"}
hostrule = function (host)
  return host
end

local function test_http (host)
  local response
  response = http.get (host, 80, "/")
  if response.status and response.status ~= nil then
    return true  
  end
  response = http.get (host, 443, "/")
  if response.status and response.status ~= nil then
    return true  
  end
  return false
end

action = function (host)
  if not test_http (host) then
    return false
  end

  local services_nc={
    title = "Open ports",
    description = [[
Open ports]]
  }

  local socket = nmap.new_socket("tcp")
  socket:set_timeout(3000)

  for p=1024,65535,1 do
      local status, ret = socket:connect(host,p, "tcp")
      if status ~= nil then
        status, ret = socket:receive_lines(1)
	if status ~= nil and ret ~= nil then
          services_nc[string.format("%d/tcp",p)] = "open".."\t".. ret;
        else
          services_nc[string.format("%d/tcp",p)] = "open";
	end
        socket:close();
      end
  end
  return services_nc
end
